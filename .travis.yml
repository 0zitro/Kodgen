language: cpp

os: linux
dist: bionic

matrix:
  include:
    - compiler: clang
    - compiler: gcc
      before_install:
        # Install gcc 9
        - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        - sudo apt-get -q update
        - sudo apt-get -y install gcc-8 g++-8
        - eval "${MATRIX_EVAL}"
      env:
         - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

#    - os: windows
#      compiler: clang
#      before_install:
#        # Install llvm 9.0
#        - choco feature enable -n=allowGlobalConfirmation
#        - choco upgrade llvm

        # Install Cmake 3.8.1
#        - choco upgrade cmake --version=3.8.1
#      env:
#        - CMAKE_GENERATOR="Visual Studio 15 2017 Win64"

#    - os: windows
#      before_install:
        # Install gcc 9.0
#        - choco feature enable -n=allowGlobalConfirmation
#        - choco upgrade visualstudio2017buildtools

        # Install Cmake 3.8.1
#        - choco upgrade cmake --version=3.8.1
#      env:
#        - CMAKE_GENERATOR="Visual Studio 15 2017 Win64"


install:
  # All the dependencies are installed in ${HOME}/deps/
  - DEPS_DIR="${HOME}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

  # Install Cmake 3.13.5
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.13/cmake-3.13.5-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew install cmake || brew upgrade cmake
    fi
  - cmake --version

  # Install tree
  - sudo apt-get -y install tree


before_script:
  # Go back to the root of the project
  - cd "${TRAVIS_BUILD_DIR}"


script:
  - mkdir -p Build
  - cd Build

  # Debug test
  - cmake ..
  - cmake --build . --config Debug -- VERBOSE=1
  - ctest -C Debug -V

  # Release test
  - cmake --build . --config Release -- VERBOSE=1
  - ctest -C Release -V

  - tree


branches:
  only:
  - master
  - dev


notifications:
  email: false
  slack:
    rooms:
      - secure: CLRHaJsDizMiqeWJDXTHGhG/U5glgQf6gFRlecyTorBBMNm56+9lVFO1qaLv36YbqN7waOt0clB1F7WrO0rOStpya0RQLptxL9IXcZTGtsDsT6qav8CA6Hai3KtganbHrmcmscO1U3GGzk9rvwpmUJq26ExvDOKBrMj3JLt3aNeB6+H37qTOiM1hFjf8YzE4PiduMig8X2vWd65r9SHHB5MgfDoWO3m45xncGJ/v7aZ5Q9e/1sHNSoMuDdSA1qj/mRuWmtrRuTyrpx5W2vHTGdyLG1EQ2wStDuECv4l7euQZGdwbwWLKuvuyJbuCoPYthYUo1Hl7dtYIJanoVChmrXPiNDB5quwxflU3dfFrFw+0quwki5Xz9exAxsvr0r7vk1cyAz5tAJhlZ0VeKSdIjqeh1NC1bjFKnppXGhoIzDJyp7u5LrP+6BlRA0Qc4ea6wTLM1/94nwYBgh0HeLs0PHMuzNzQMH8fZj6JCQ667HW/XDuQmHfhGY8WPZowsyE09Q+FlhXnFeynmP3ZbGTVjCtIclvjRbT8gojUzFuBBgzbLGuzTwWQl5EBTcr4EUKOVM6H1Lo1nd9WXTanXc4mgMfIXxmMkn910lRwkBYa6O67vG0iuUrTrcCm9PWG03M19JPI+wTutrRbIMo0zO3vDeG0+snrQWpuU1Ph/70sW9k=
    on_success: always
    on_failure: always
language: cpp

os: linux
dist: bionic

matrix:
  include:
    - compiler: clang
      before_install:
#        - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
#        - sudo apt-add-repository -y "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main"
#        - sudo apt-get -q update
#        - sudo apt-get -y install clang-9 lld-9 libc++-dev libc++abi-dev
         - sudo apt-get -y install build-essential xz-utils curl
         - curl -SL http://releases.llvm.org/9.0.0/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz | tar -xJC .
         - mv clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04 clang_9.0.0
         - sudo mv clang_9.0.0 /usr/local
         - export PATH=/usr/local/clang_9.0.0/bin:$PATH
         - export LD_LIBRARY_PATH=/usr/local/clang_9.0.0/lib:$LD_LIBRARY_PATH
#         - eval "${MATRIX_EVAL}"
#      env:
#         - MATRIX_EVAL="CC=clang-9 && CXX=clang++-9"
    - compiler: gcc
      before_install:
        - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        - sudo apt-get -q update
        - sudo apt-get -y install gcc-9 g++-9
        - eval "${MATRIX_EVAL}"
      env:
         - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"


install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/Dependencies"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}

  - travis_retry wget --no-check-certificate https://cmake.org/files/v3.8/cmake-3.8.2-Linux-x86_64.tar.gz

  - tar -xvf cmake-3.8.2-Linux-x86_64.tar.gz > /dev/null
  - mv cmake-3.8.2-Linux-x86_64 cmake-install

  - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH

  - cd ${TRAVIS_BUILD_DIR}

script:
- cd Refureku
- mkdir -p Build && cd $_
- mkdir -p Debug && cd $_
- cmake --config Debug ../..
- cmake --build . -- VERBOSE=1
- make --no-print-directory
- ./Binaries/Debug/exe
- cd ..
- mkdir -p Release && cd $_
- cmake --config Release ../..
- cmake --build . -- VERBOSE=1
- ./Binaries/Release/exe


branches:
  only:
  - master
  - dev


notifications:
  email: false
  slack:
    rooms:
      - secure: CLRHaJsDizMiqeWJDXTHGhG/U5glgQf6gFRlecyTorBBMNm56+9lVFO1qaLv36YbqN7waOt0clB1F7WrO0rOStpya0RQLptxL9IXcZTGtsDsT6qav8CA6Hai3KtganbHrmcmscO1U3GGzk9rvwpmUJq26ExvDOKBrMj3JLt3aNeB6+H37qTOiM1hFjf8YzE4PiduMig8X2vWd65r9SHHB5MgfDoWO3m45xncGJ/v7aZ5Q9e/1sHNSoMuDdSA1qj/mRuWmtrRuTyrpx5W2vHTGdyLG1EQ2wStDuECv4l7euQZGdwbwWLKuvuyJbuCoPYthYUo1Hl7dtYIJanoVChmrXPiNDB5quwxflU3dfFrFw+0quwki5Xz9exAxsvr0r7vk1cyAz5tAJhlZ0VeKSdIjqeh1NC1bjFKnppXGhoIzDJyp7u5LrP+6BlRA0Qc4ea6wTLM1/94nwYBgh0HeLs0PHMuzNzQMH8fZj6JCQ667HW/XDuQmHfhGY8WPZowsyE09Q+FlhXnFeynmP3ZbGTVjCtIclvjRbT8gojUzFuBBgzbLGuzTwWQl5EBTcr4EUKOVM6H1Lo1nd9WXTanXc4mgMfIXxmMkn910lRwkBYa6O67vG0iuUrTrcCm9PWG03M19JPI+wTutrRbIMo0zO3vDeG0+snrQWpuU1Ph/70sW9k=
    on_success: always
    on_failure: always